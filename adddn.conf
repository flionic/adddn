  upstream adddn_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    server unix:/run/adddn/adddn.sock fail_timeout=0;

    # for a TCP configuration
    # server 127.0.0.1:23044 fail_timeout=0;
  }

server {
	server_name domgen.ml;
	root /var/www/adddn/static;
    try_files $fastcgi_script_name =404;
    # TODO: css and oth from nginx

	location / {
	    proxy_pass              http://adddn_server;
        proxy_redirect          off;
        proxy_buffering         off;
        proxy_set_header        Host                $http_host;
        #proxy_set_header        Host                $host;
        proxy_set_header        X-Real-IP           $remote_addr;
        proxy_set_header        X-Forwarded-Proto   $scheme;
        proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Host $server_name;
        proxy_connect_timeout   600;
        proxy_send_timeout      600;
        proxy_read_timeout      600;
        send_timeout            600;
    }
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/domgen.ml/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/domgen.ml/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = domgen.ml) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

	server_name domgen.ml;
    listen 80;
    return 404; # managed by Certbot
}

server {
	server_name test.domgen.ml;
	root /var/www/adddn/static;
    try_files $fastcgi_script_name =404;
	location / {
	    proxy_pass              http://127.0.0.1:23044;
        proxy_redirect          off;
        proxy_buffering         off;
        proxy_set_header        Host                $http_host;
        #proxy_set_header        Host                $host;
        proxy_set_header        X-Real-IP           $remote_addr;
        proxy_set_header        X-Forwarded-Proto   $scheme;
        proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Host $server_name;
        proxy_connect_timeout   600;
        proxy_send_timeout      600;
        proxy_read_timeout      600;
        send_timeout            600;
    }
    listen 80;
}